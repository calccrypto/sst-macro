#!/usr/bin/env python2

import sys
import os
import os.path
import commands
import re


aprun_args = []
sstmac_exe = None
splitpoint = 1
for i in range(splitpoint, len(sys.argv)):
    entry = sys.argv[i]
    status, fullpath = commands.getstatusoutput("which %s" % entry)
    if status == 0:
        sstmac_exe = sys.argv[i]
        aprun_args = sys.argv[1:i]
        splitpoint = i + 1
        break

valid_apps = commands.getoutput("%s --print-apps" % sstmac_exe).split("Valid SST/macro apps are:")[-1].strip().splitlines()

appname = None
app_args = []
sst_args = []
if splitpoint == len(sys.argv): #just use user_mpiapp_cxx
    appname = "user_mpiapp_cxx"
else:
    for i in range(splitpoint, len(sys.argv)):
        entry = sys.argv[i]
        if entry in valid_apps:
            appname = entry
            sst_args = sys.argv[splitpoint:i]
            app_args = sys.argv[i+1:]
            break

if not sstmac_exe:
    sys.exit("invalid aprun: no sstmac executable found")

if not appname:
    sys.exit("invalid aprun: no valid app found")

for i in range(len(sst_args)):
    if " " in sst_args[i]:
        sst_args[i] = '"%s"' % sst_args[i]

exe_args = [sstmac_exe]
exe_args.extend(sst_args)
exe_args.append('-p "launch_app1_cmd=aprun %s"' % " ".join(aprun_args))
exe_args.append('-p "launch_app1=%s"' % appname)
exe_args.append('-p "launch_app1_argv=%s"' % " ".join(app_args))

cmd = " ".join(exe_args)
print cmd
os.system(cmd)
